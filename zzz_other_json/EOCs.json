[


  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_CASTED_A_SPELL_LEARN_BOOST",
    "eoc_type": "EVENT",
    "required_event": "character_casts_spell",
    "//": "imported magiclysm level up systems for dungeon spells",
    "condition": { "compare_string": [ "PSY_magi_DUNGEON_MAGE", { "context_val": "school" } ] },
    "effect": [
      {
        "math": [
          "u_spell_exp(_spell)",
          "+=",
          "mc_spell_exp_diff(u_spell_level(_spell)) / mc_spell_cost_train_factor(_cost, 16, 65) * mc_spell_train_focus_factor(u_val('focus'),u_spell_level(_spell))"
        ]
      }
    ]
  },

  {
    "type": "effect_type",
    "id": "PSY_effect_exp_potion_1000",
    "name":  [ 
      "Spell EXP Potion(1000)"      
    ],
    "desc": [ "The experience gained the next time magic is used is increased." ],
    "rating": "good",
    "show_in_info": true
  },

  {
    "type": "effect_type",
    "id": "PSY_effect_exp_potion_5000",
    "name":  [ 
      "Spell EXP Potion(5000)"      
    ],
    "desc": [ "The experience gained the next time magic is used is increased." ],
    "rating": "good",
    "show_in_info": true
  },

  {
    "type": "effect_type",
    "id": "PSY_effect_exp_potion_10000",
    "name":  [ 
      "Spell EXP Potion(10000)"      
    ],
    "desc": [ "The experience gained the next time magic is used is increased." ],
    "rating": "good",
    "show_in_info": true
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_CASTED_A_SPELL_LEARN_BOOST_POTION",
    "eoc_type": "EVENT",
    "required_event": "character_casts_spell",
    "//": "imported magiclysm level up systems for dungeon spells",
    "condition": {
            "and": [
                { "or":
                  [
                    { "u_has_effect": "PSY_effect_exp_potion_10000" },
                    { "u_has_effect": "PSY_effect_exp_potion_5000" },
                    { "u_has_effect": "PSY_effect_exp_potion_1000" }
                  ]
                },
                { "math": [ "u_spell_exp(_spell) >= 0" ] }
              ]
    },
    "effect": [
      { "math": [ "_sum_exp", "=", "0" ] },
      { "if": { "u_has_effect": "PSY_effect_exp_potion_10000" },
        "then": { "math": [ "_sum_exp", "+=", "10000" ] }
      },
      { "if": { "u_has_effect": "PSY_effect_exp_potion_5000" },
        "then": { "math": [ "_sum_exp", "+=", "5000" ] }
      },
      { "if": { "u_has_effect": "PSY_effect_exp_potion_1000" },
        "then": { "math": [ "_sum_exp", "+=", "1000" ] }
      },
      { "math": [ "u_spell_exp(_spell)", "+=", "_sum_exp" ] },
      { "u_lose_effect": "PSY_effect_exp_potion_10000" },
      { "u_lose_effect": "PSY_effect_exp_potion_5000" },
      { "u_lose_effect": "PSY_effect_exp_potion_1000" },
      { "u_message": "+<context_val:sum_exp> EXP" }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_TELEPORT_TEST",
    "//": "This is the EOC which actually teleports you up.",
    "effect": [
      { "u_location_variable": { "u_val": "PSY_teleport_up" }, "z_adjust": 1 },
      { "u_message": "You have teleported to the upper level.", "popup": true },
      { "u_teleport": { "u_val": "PSY_teleport_up" } }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_teleport_stone",
    "//": "This is the EOC which actually returns you the stone.",
    "effect": [
      { "u_location_variable": { "global_val": "OM_PSY_dungeon_z0" } },
      { "u_message": "You can come back here with items you earn after defeating the boss.", "popup": true }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_teleport_to_stone",
    "//": "This is the EOC which actually returns you the stone.",
    "effect": [
      { "u_teleport": { "global_val": "OM_PSY_dungeon_z0" }, "force": true }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_ARTIFACT_SPAWN",
    "effect": [
      { "mapgen_update": "spawn_minor_spark_artifact" },
      {
        "u_message": "As you leave the fugue state, you realize you have managed to create a thing.  Now to figure out what it does.",
        "type": "info"
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_magi_slow_dammy",
    "recurrence": [ "25 minutes", "1 hours 15 minutes" ],
    "condition": { "and": [ { "u_has_effect": "PSY_magi_slow_dammy" }, { "not": { "u_has_effect": "PSY_magi_weak_slow" } } ] },
    "deactivate_condition": { "not": { "or": [ { "u_has_effect": "PSY_magi_slow_dammy" }, { "u_has_effect": "stim_overdose" } ] } },
    "effect": [
      { "u_message": "The spiders in your veins itch!", "type": "bad" },
      { "u_add_effect": "PSY_magi_slow_dammy", "duration": "10 minutes", "target_part": "RANDOM" }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_lab_cyan_mutagen_check",
    "recurrence": [ 15, 30 ],
    "condition": { "and": [ { "u_at_om_location": "lab_2x2_MUT_tier_2_NE" }, { "not": { "u_has_item": "id_science_mutagen_cyan" } } ] },
    "effect": [ { "mapgen_update": "release_bots_5", "om_terrain": "lab_2x2_MUT_tier_2_NE" } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_PORTAL_STORM_DUNGEON_REFLECTION_SPAWN",
    "global": true,
    "effect": {
      "switch": { "global_val": "var", "var_name": "portal_dungeon_reflect_strength" },
      "cases": [
        {
          "case": 0,
          "effect": {
            "u_spawn_monster": "mon_pale_reflection",
            "real_count": 1,
            "min_radius": 8,
            "max_radius": 12,
            "spawn_message": "Something your mind can't fully parse appears, despite the distance and obstacles you know where it is.  You can feel its presence as if it was a part of you."
          }
        },
        {
          "case": 5,
          "effect": {
            "u_spawn_monster": "mon_twisted_reflection",
            "real_count": 1,
            "min_radius": 8,
            "max_radius": 12,
            "spawn_message": "Something your mind can't fully parse appears, despite the distance and obstacles you know where it is.  You can feel its presence as if it was a part of you."
          }
        },
        {
          "case": 10,
          "effect": {
            "u_spawn_monster": "mon_dark_reflection",
            "real_count": 1,
            "min_radius": 8,
            "max_radius": 12,
            "spawn_message": "Something your mind can't fully parse appears, despite the distance and obstacles you know where it is.  You can feel its presence as if it was a part of you."
          }
        },
        {
          "case": 15,
          "effect": {
            "u_spawn_monster": "mon_better_half",
            "real_count": 1,
            "min_radius": 8,
            "max_radius": 12,
            "spawn_message": "Something your mind can't fully parse appears, despite the distance and obstacles you know where it is.  You can feel its presence as if it was a part of you."
          }
        }
      ]
    }
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_summon_mutant_bee_hostile",
    "global": true,
    "effect": [
      { "u_spawn_monster": "PSY_magi_mon_bee", "real_count": 12, "min_radius": 16, "max_radius": 20 },
      { "u_spawn_monster": "PSY_magi_mon_mutant_bee_green_passive", "real_count": 4, "min_radius": 12, "max_radius": 18},
      { "u_spawn_monster": "PSY_magi_mon_mutant_bee_yellow_passive", "real_count": 4, "min_radius": 10, "max_radius": 16 },
      { "u_spawn_monster": "PSY_magi_mon_mutant_bee_red_passive", "real_count": 4, "min_radius": 8, "max_radius": 14}
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_TREASURE_MAPGEN",
    "effect": [
      {
        "u_location_variable": { "global_val": "PSY_treasure_map" },
        "target_params": { "om_terrain": "field", "search_range": 200, "min_distance": 12, "z": 0 }
      },
      {
        "u_message": "You can feel the presence of something nearby, cracked in a way you can't put into words(check mission log for details)."
      },
      { "assign_mission": "PSY_MISSION_INVESTIGATE_TREASURE_HUNT" },
      {
        "revert_location": { "global_val": "PSY_treasure_map" },
        "time_in_future": "infinite",
        "key": "PSY_honey_treasure_map"
      },
      { "mapgen_update": "PSY_honey_treasure_map", "target_var": { "global_val": "PSY_treasure_map" } }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_treasure_open",
    "//": "This is the EOC which open the nearly treasure chest.",
    "effect": [
      {
        "u_cast_spell": {
          "id": "PSY_magi_item_spell_open_big_treasure_chest",
          "message": "You opened treasure chest! When you hit them, you can acquire the contents of the treasure chest."
        },
        "targeted": false
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_treasure_open_gargoyle",
    "//": "This is the EOC which open the nearly treasure chest.",
    "effect": [
      {
        "u_cast_spell": {
          "id": "PSY_magi_item_spell_open_gargoyle_treasure_chest",
          "message": "You opened treasure chest! When you hit them, you can acquire the contents of the treasure chest."
        },
        "targeted": false
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_sword_open",
    "//": "This is the EOC which open the nearly treasure chest.",
    "effect": [
      {
        "u_cast_spell": {
          "id": "PSY_magi_item_spell_open_rocked_sword",
          "message": "You opened treasure chest! When you hit them, you can acquire the contents of the treasure chest."
        },
        "targeted": false
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_sword_open_cursed",
    "//": "This is the EOC which open the nearly treasure chest.",
    "effect": [
      { "u_spawn_monster": "PSY_magi_mon_bee", "real_count": 2, "min_radius": 2, "max_radius": 3 },
      {
        "u_cast_spell": {
          "id": "PSY_magi_item_spell_open_rocked_sword",
          "message": "You opened treasure chest! When you hit them, you can acquire the contents of the treasure chest."
        },
        "targeted": false
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_treasure_bash",
    "//": "This is the EOC which open the nearly treasure chest.",
    "effect": [
      {
        "u_cast_spell": {
          "id": "PSY_magi_item_spell_open_chest_terrain_bashes",
          "message": ""
        },
        "targeted": false
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_summon_gargoyle_hostile",
    "global": true,
    "effect": [
      { "u_spawn_monster": "PSY_mon_gargoyle", "real_count": 1, "min_radius": 2, "max_radius": 2 }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_max_4_times_enchanted",
    "effect": [
      {
        "if": { "npc_has_flag": "PSY_1_LEFT_ENCHANTED" },
        "then": [
          { "npc_set_flag": "PSY_ALREADY_ENCHANTED" },
          { "npc_unset_flag": "PSY_1_LEFT_ENCHANTED" },
          { "u_message": "<npc_name> has 0 more space available for enchantment." }
        ],
        "else": [
          {
            "if": { "npc_has_flag": "PSY_2_LEFT_ENCHANTED" },
            "then": [
              { "npc_set_flag": "PSY_1_LEFT_ENCHANTED" },
              { "npc_unset_flag": "PSY_2_LEFT_ENCHANTED" },
              { "u_message": "<npc_name> has 1 more space available for enchantment." }
            ],
            "else": [
              {
                "if": { "npc_has_flag": "PSY_3_LEFT_ENCHANTED" },
                "then": [
                  { "npc_set_flag": "PSY_2_LEFT_ENCHANTED" },
                  { "npc_unset_flag": "PSY_3_LEFT_ENCHANTED" },
                  { "u_message": "<npc_name> has 2 more spaces available for enchantment." }
                ],
                "else": [{ "npc_set_flag": "PSY_3_LEFT_ENCHANTED" },{ "u_message": "<npc_name> has 3 more spaces available for enchantment." }]
              }
            ]
          }
        ]
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_max_1_times_special_enchanted",
    "effect": [
      {
        "if": { "npc_has_flag": "PSY_1_LEFT_SPECIAL_ENCHANTED" },
        "then": [
          { "npc_unset_flag": "PSY_1_LEFT_SPECIAL_ENCHANTED" },
          { "npc_set_flag": "PSY_ALREADY_SPECIAL_ENCHANTED" },
          { "u_message": "<npc_name> has 0 more space available for enchantment." }
        ],
        "else": [{ "u_message": "<npc_name> has 0 more spaces available for enchantment." }]
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_worn_item_all",
    "effect": [
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_lift" },
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_regen_mana" },
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_mana" },
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_sense" },
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_wise" },
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_deft" },
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_speed" },
       { "time_in_future": "1 s","queue_eoc_with": "EOC_PSY_enchant_muscle" }  
      ]
  },
  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_worn_item_all1",
    "eoc_type": "EVENT",
    "required_event": "character_wears_item",
    "effect": [
       { "run_eocs": "EOC_PSY_enchant_lift" },
       { "run_eocs": "EOC_PSY_enchant_regen_mana" },
       { "run_eocs": "EOC_PSY_enchant_sense" },
       { "run_eocs": "EOC_PSY_enchant_mana" },
       { "run_eocs": "EOC_PSY_enchant_wise" },
       { "run_eocs": "EOC_PSY_enchant_deft" },
       { "run_eocs": "EOC_PSY_enchant_speed" },
       { "run_eocs": "EOC_PSY_enchant_muscle" }  
      ]
  },
  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_worn_item_all2",
    "eoc_type": "EVENT",
    "required_event": "character_wields_item",
    "effect": [ 
       { "run_eocs": "EOC_PSY_enchant_lift" },
       { "run_eocs": "EOC_PSY_enchant_regen_mana" },
       { "run_eocs": "EOC_PSY_enchant_sense" },
       { "run_eocs": "EOC_PSY_enchant_mana" },
       { "run_eocs": "EOC_PSY_enchant_wise" },
       { "run_eocs": "EOC_PSY_enchant_deft" },
       { "run_eocs": "EOC_PSY_enchant_speed" },
       { "run_eocs": "EOC_PSY_enchant_muscle" } 
      ]
  },
  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_lift",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_lift_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_lift_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_lift_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_lift_val", "=", "60000" ] },
                  { "math": [ "u_counter_var_love_points_love_point", "=", "6" ] },
                  { "u_add_effect": "PSY_enchant_lift", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_lift_val", "=", "50000" ] },
                  { "math": [ "u_counter_var_love_points_love_point", "=", "5" ] },
                  { "u_add_effect": "PSY_enchant_lift", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_lift_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_lift_val", "=", "40000" ] },
                  { "math": [ "u_counter_var_love_points_love_point", "=", "4" ] },
                  { "u_add_effect": "PSY_enchant_lift", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_lift_val", "=", "30000" ] },
                  { "math": [ "u_counter_var_love_points_love_point", "=", "4" ] },
                  { "u_add_effect": "PSY_enchant_lift", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_lift_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_lift_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_lift_val", "=", "30000" ] },
                  { "math": [ "u_counter_var_love_points_love_point", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_lift", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_lift_val", "=", "20000" ] },
                  { "math": [ "u_counter_var_love_points_love_point", "=", "2" ] },
                  { "u_add_effect": "PSY_enchant_lift", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_lift_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_lift_val", "=", "10000" ] },
                  { "math": [ "u_counter_var_love_points_love_point", "=", "1" ] },
                  { "u_add_effect": "PSY_enchant_lift", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_lift" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_lift",
    "name":  [ 
      "Lift Up"
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "CARRY_WEIGHT", "add": { "math": [ "u_EOC_PSY_enchant_lift_val" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_muscle",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_muscle_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_muscle_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_muscle_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_muscle_val", "=", "6" ] },
                  { "u_add_effect": "PSY_enchant_muscle", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_muscle_val", "=", "5" ] },
                  { "u_add_effect": "PSY_enchant_muscle", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_muscle_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_muscle_val", "=", "4" ] },
                  { "u_add_effect": "PSY_enchant_muscle", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_muscle_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_muscle", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_muscle_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_muscle_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_muscle_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_muscle", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_muscle_val", "=", "2" ] },
                  { "u_add_effect": "PSY_enchant_muscle", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_muscle_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_muscle_val", "=", "1" ] },
                  { "u_add_effect": "PSY_enchant_muscle", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_muscle" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_muscle",
    "name":  [ 
      "Muscle Up"      
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "STRENGTH", "add": { "math": [ "u_EOC_PSY_enchant_muscle_val" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_wise",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_wise_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_wise_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_wise_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_wise_val", "=", "6" ] },
                  { "u_add_effect": "PSY_enchant_wise", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_wise_val", "=", "5" ] },
                  { "u_add_effect": "PSY_enchant_wise", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_wise_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_wise_val", "=", "4" ] },
                  { "u_add_effect": "PSY_enchant_wise", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_wise_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_wise", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_wise_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_wise_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_wise_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_wise", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_wise_val", "=", "2" ] },
                  { "u_add_effect": "PSY_enchant_wise", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_wise_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_wise_val", "=", "1" ] },
                  { "u_add_effect": "PSY_enchant_wise", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_wise" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_wise",
    "name":  [ 
      "Wise Up"      
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "INTELLIGENCE", "add": { "math": [ "u_EOC_PSY_enchant_wise_val" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_deft",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_deft_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_deft_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_deft_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_deft_val", "=", "6" ] },
                  { "u_add_effect": "PSY_enchant_deft", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_deft_val", "=", "5" ] },
                  { "u_add_effect": "PSY_enchant_deft", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_deft_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_deft_val", "=", "4" ] },
                  { "u_add_effect": "PSY_enchant_deft", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_deft_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_deft", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_deft_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_deft_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_deft_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_deft", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_deft_val", "=", "2" ] },
                  { "u_add_effect": "PSY_enchant_deft", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_deft_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_deft_val", "=", "1" ] },
                  { "u_add_effect": "PSY_enchant_deft", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_deft" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_deft",
    "name":  [ 
      "Deft fingers"      
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "DEXTERITY", "add": { "math": [ "u_EOC_PSY_enchant_deft_val" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_sense",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_sense_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_sense_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_sense_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_sense_val", "=", "6" ] },
                  { "u_add_effect": "PSY_enchant_sense", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_sense_val", "=", "5" ] },
                  { "u_add_effect": "PSY_enchant_sense", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_sense_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_sense_val", "=", "4" ] },
                  { "u_add_effect": "PSY_enchant_sense", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_sense_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_sense", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_sense_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_sense_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_sense_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_sense", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_sense_val", "=", "2" ] },
                  { "u_add_effect": "PSY_enchant_sense", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_sense_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_sense_val", "=", "1" ] },
                  { "u_add_effect": "PSY_enchant_sense", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_sense" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_sense",
    "name":  [ 
      "Sense Up"      
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "PERCEPTION", "add": { "math": [ "u_EOC_PSY_enchant_sense_val" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_speed",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_speed_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_speed_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_speed_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_speed_val", "=", "30" ] },
                  { "u_add_effect": "PSY_enchant_speed", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_speed_val", "=", "25" ] },
                  { "u_add_effect": "PSY_enchant_speed", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_speed_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_speed_val", "=", "20" ] },
                  { "u_add_effect": "PSY_enchant_speed", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_speed_val", "=", "15" ] },
                  { "u_add_effect": "PSY_enchant_speed", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_speed_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_speed_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_speed_val", "=", "15" ] },
                  { "u_add_effect": "PSY_enchant_speed", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_speed_val", "=", "10" ] },
                  { "u_add_effect": "PSY_enchant_speed", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_speed_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_speed_val", "=", "5" ] },
                  { "u_add_effect": "PSY_enchant_speed", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_speed" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_speed",
    "name":  [ 
      "Speed Up"      
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "SPEED", "add": { "math": [ "u_EOC_PSY_enchant_speed_val" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_mana",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_mana_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_mana_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_mana_val", "=", "1800" ] },
                  { "u_add_effect": "PSY_enchant_mana", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_mana_val", "=", "1500" ] },
                  { "u_add_effect": "PSY_enchant_mana", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_mana_val", "=", "1200" ] },
                  { "u_add_effect": "PSY_enchant_mana", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_mana_val", "=", "900" ] },
                  { "u_add_effect": "PSY_enchant_mana", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_mana_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_mana_val", "=", "900" ] },
                  { "u_add_effect": "PSY_enchant_mana", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_mana_val", "=", "600" ] },
                  { "u_add_effect": "PSY_enchant_mana", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_mana_val", "=", "300" ] },
                  { "u_add_effect": "PSY_enchant_mana", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_mana" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_mana",
    "name":  [ 
      "Mana Up"      
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "MAX_MANA", "add": { "math": [ "u_EOC_PSY_enchant_mana_val" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "EOC_PSY_enchant_regen_mana",
    "effect": [
      {
        "if": { "u_has_worn_with_flag": "PSY_enchant_regen_mana_3" },
        "then": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_regen_mana_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_regen_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_regen_mana_val", "=", "6" ] },
                  { "u_add_effect": "PSY_enchant_regen_mana", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_regen_mana_val", "=", "5" ] },
                  { "u_add_effect": "PSY_enchant_regen_mana", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_regen_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_regen_mana_val", "=", "4" ] },
                  { "u_add_effect": "PSY_enchant_regen_mana", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_regen_mana_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_regen_mana", "duration": "PERMANENT" }
                ]
              }
            ]
          }
        ],
        "else": [
          {
            "if": { "u_has_worn_with_flag": "PSY_enchant_regen_mana_2" },
            "then": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_regen_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_regen_mana_val", "=", "3" ] },
                  { "u_add_effect": "PSY_enchant_regen_mana", "duration": "PERMANENT" }
                ],
                "else": [
                  { "math": [ "u_EOC_PSY_enchant_regen_mana_val", "=", "2" ] },
                  { "u_add_effect": "PSY_enchant_regen_mana", "duration": "PERMANENT" }
                ]
              }
            ],
            "else": [
              {
                "if": { "u_has_worn_with_flag": "PSY_enchant_regen_mana_1" },
                "then": [
                  { "math": [ "u_EOC_PSY_enchant_regen_mana_val", "=", "1" ] },
                  { "u_add_effect": "PSY_enchant_regen_mana", "duration": "PERMANENT" }
                ],
                "else": { "u_lose_effect": "PSY_enchant_regen_mana" }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "effect_type",
    "id": "PSY_enchant_regen_mana",
    "name":  [ 
      "Mana Regen"      
    ],
    "desc": [ "The status is increased by the armor currently being equipped.\nIf the status is not applied, it can be resolved by re-equipping the equipment." ],
    "rating": "good",
    "show_in_info": true,
    "enchantments": [ { "values": [ { "value": "REGEN_MANA", "multiply": { "math": [ "u_EOC_PSY_enchant_regen_mana_val * 0.1" ] } } ] } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_teleport_item_to_your_feet",
    "effect": [
      { "u_location_variable": { "context_val": "PSY_your_location" } },
      {
        
      "if": { "u_query_tile": "anywhere", "target_var": { "context_val": "PSY_teleport_items_location" }, "message": "Select point" },
        "then": {
          "u_map_run_item_eocs": "manual_mult",
          "loc": { "context_val": "PSY_teleport_items_location" },
          "min_radius": 0,
          "max_radius": 0,
          "title": "Teleport Items",
          "true_eocs": [
            {
              "id": "PSY_EOC_teleport_item_to_your_feet_main",
              "effect": [ { "npc_teleport": { "context_val": "PSY_your_location" } }, { "u_message": "Items rolled at your feet." } ]
            }
          ]
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_teleport_your_feet_item_to_target",
    "effect": [
      { "u_location_variable": { "context_val": "PSY_your_location" } },
      {
        
      "if": { "u_query_tile": "anywhere", "target_var": { "context_val": "PSY_teleport_items_location" }, "message": "Select point" },
        "then": {
          "u_map_run_item_eocs": "manual_mult",
          "loc": { "context_val": "PSY_your_location" },
          "min_radius": 0,
          "max_radius": 0,
          "title": "Teleport Items",
          "true_eocs": [
            {
              "id": "PSY_EOC_teleport_your_feet_item_to_target_main",
              "effect": [ { "npc_teleport": { "context_val": "PSY_teleport_items_location" } }, { "u_message": "Items rolled at target tile." } ]
            }
          ]
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_melee_attacks_character",
    "eoc_type": "EVENT",
    "required_event": "character_melee_attacks_character",
    "condition": { "and": [ { "math": [ "_hits", "==", "1" ] } ] },
    "effect": {
      "run_eocs": [
        "PSY_EOC_weapon_enchant_Frostwolf",
        "PSY_EOC_fire_element_melee_Flameburst",
        "PSY_EOC_air_element_melee_Airburst",
        "PSY_EOC_air_element_melee_Stomp",
        "PSY_EOC_water_element_melee_waterslow",
        "PSY_EOC_weapon_enchant_Flameburst",
        "PSY_EOC_weapon_enchant_Frostbite",
        "PSY_EOC_weapon_enchant_Bloodsucking",
        "PSY_EOC_weapon_enchant_Swift",
        "PSY_EOC_weapon_enchant_Vacuum",
        "PSY_EOC_weapon_enchant_Sonic",
        "PSY_EOC_weapon_enchant_Darkness",
        "PSY_EOC_weapon_enchant_Tentacle",
        "PSY_EOC_weapon_enchant_Bug_Swarm",
        "PSY_EOC_weapon_enchant_Summoning",
        "PSY_EOC_weapon_enchant_Mist",
        "PSY_EOC_weapon_enchant_Floral",
        "PSY_EOC_weapon_enchant_Manasucking"
      ]
    }
  },
  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_melee_attacks_monster",
    "eoc_type": "EVENT",
    "required_event": "character_melee_attacks_monster",
    "condition": { "and": [ { "math": [ "_hits", "==", "1" ] } ] },
    "effect": {
      "run_eocs": [
        "PSY_EOC_weapon_enchant_Frostwolf",
        "PSY_EOC_fire_element_melee_Flameburst",
        "PSY_EOC_air_element_melee_Airburst",
        "PSY_EOC_air_element_melee_Stomp",
        "PSY_EOC_water_element_melee_waterslow",
        "PSY_EOC_weapon_enchant_Flameburst",
        "PSY_EOC_weapon_enchant_Frostbite",
        "PSY_EOC_weapon_enchant_Bloodsucking",
        "PSY_EOC_weapon_enchant_Swift",
        "PSY_EOC_weapon_enchant_Vacuum",
        "PSY_EOC_weapon_enchant_Sonic",
        "PSY_EOC_weapon_enchant_Darkness",
        "PSY_EOC_weapon_enchant_Tentacle",
        "PSY_EOC_weapon_enchant_Bug_Swarm",
        "PSY_EOC_weapon_enchant_Summoning",
        "PSY_EOC_weapon_enchant_Mist",
        "PSY_EOC_weapon_enchant_Floral",
        "PSY_EOC_weapon_enchant_Manasucking"
      ]
    }
  },


  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_magic_fountain",
    "global": true,
    "effect": { "open_dialogue": { "topic": "PSY_TALK_MAGIC_FOUNTAIN" } }
  },

  {
    "id": "EOC_PSY_MAGIC_FOUNTAIN_RANDOM_ENCHANT_ARMOR",
    "type": "effect_on_condition",
    "effect": [
      {
        "switch": { "math": [ "rand(7)" ] },
        "cases": [
          { "case": 0, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_LIFT_SPELL" } ] },
          { "case": 1, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_MUSCLE_SPELL" } ] },
          { "case": 2, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_WISE_SPELL" } ] },
          { "case": 3, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_DEFT_SPELL" } ] },
          { "case": 4, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_SENSE_SPELL" } ] },
          { "case": 5, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_SPEED_SPELL" } ] },
          { "case": 6, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_MANA_SPELL" } ] },
          { "case": 7, "effect": [ { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_REGEN_MANA_SPELL" } ] }
        ]
      }
    ]
  },

  {
    "id": "PSY_TALK_MAGIC_FOUNTAIN",
    "type": "talk_topic",
    "dynamic_line": "You can enchant random effects on your equipment at the magic fountain.",
    "responses": [
      { "text": "[I want to enchant an enchantable weapon picked up in a dungeon!]", "topic": "PSY_TALK_MAGIC_FOUNTAIN_ENCHANT_WEAPON1" },
      { "text": "[I want to enchant my currently equipped armor!]", "topic": "PSY_TALK_MAGIC_FOUNTAIN_ENCHANT_ARMOR1" },
      { "text": "[I don't want any right now.]", "topic": "TALK_DONE" }
    ]
  },
  {
    "//1": "WEAPON",
    "id": "PSY_TALK_MAGIC_FOUNTAIN_ENCHANT_WEAPON1",
    "type": "talk_topic",
    "dynamic_line": "Do you really want to enchant your weapon?\n*Make sure you have a weapon in your inventory that you are equipping or that you acquired in a dungeon that can be enchanted in your inventory!",
    "responses": [
      {
        "text": "[Yes.]",
          "topic": "PSY_TALK_MAGIC_FOUNTAIN_ANSWER",
          "effect": [
            { "run_eocs": "EOC_PSY_CHOICE_ENCHANT_WEAPON_SPELL" },
            {
              "u_cast_spell": {
                "id": "PSY_magi_item_spell_no_more_use_magic_fountain",
                "message": "The fountain lost its luster."
              },
              "targeted": false
            }
          ]
      },
      { "text": "[I don't want any right now.]", "topic": "TALK_DONE" }
    ]
  },
  {
    "//1": "WEAPON",
    "id": "PSY_TALK_MAGIC_FOUNTAIN_ENCHANT_ARMOR1",
    "type": "talk_topic",
    "dynamic_line": "Do you really want to enchant your armor?\n*Make sure you are equipped with the armor you want to enchant!",
    "responses": [
      {
        "text": "[Yes.]",
          "topic": "PSY_TALK_MAGIC_FOUNTAIN_ANSWER",
          "effect": [
            { "run_eocs": "EOC_PSY_MAGIC_FOUNTAIN_RANDOM_ENCHANT_ARMOR" },
            {
              "u_cast_spell": {
                "id": "PSY_magi_item_spell_no_more_use_magic_fountain",
                "message": "The fountain lost its luster."
              },
              "targeted": false
            }
          ]
      },
      { "text": "[I don't want any right now.]", "topic": "TALK_DONE" }
    ]
  },
  {
    "type": "talk_topic",
    "id": "PSY_TALK_MAGIC_FOUNTAIN_ANSWER",
    "dynamic_line": "The fountain lost its luster.",
    "responses": [ { "text": "...", "topic": "TALK_DONE" } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_self_serenade_spirits_mood_buff",
    "condition": { "not":  { "u_has_effect": "PSY_magi_self_serenade_spirits_effect" } },
    "//": "duration doesn't matter, since morale is added every hour, therefore it will always be mismatched with bad_food_ennui; instead, if you loose bad_food_ennui effect, you will lost the mood debuff also",
    "effect": [
      {
        "u_add_effect": "PSY_magi_self_serenade_spirits_effect",
        "duration": { "math": [ "( 3600 + (u_spell_level('PSY_magi_self_serenade_spirits_spell') * 3600)) " ] }
      },
      {
        "u_add_morale": "morale_forest_unity",
        "bonus": 20,
        "max_bonus": 30,
        "duration": { "math": [ "( 3600 + (u_spell_level('PSY_magi_self_serenade_spirits_spell') * 3600) )" ] }
      },
      { "u_message": "You're filled with euphoria!", "type": "info" }
    ],
    "false_effect": [ { "u_message": "You are already in the middle of listening to 'Serenade of Spirits'!", "type": "info" } ]
  },


  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_CHANGE_ELEMENT_FORM",
    "effect": [
      {
        "run_eoc_selector": [
          "PSY_EOC_SHAPESHIFT_CHANGE_TO_WATER_ELEMENT",
          "PSY_EOC_SHAPESHIFT_CHANGE_TO_FIRE_ELEMENT",
          "PSY_EOC_SHAPESHIFT_CHANGE_TO_AIR_ELEMENT",
          "PSY_EOC_SHAPESHIFT_CHANGE_TO_EARTH_ELEMENT"
        ],
        "names": [ "Water Element", "Fire Element", "Air Element", "Earth Element" ],
        "keys": [ "1", "2", "3", "4" ],
        "descriptions": [
          "Shapeshift the your body into a Water Element.\nWhile this form,\nPROS\n・Walking in water\n・bulletproof\n・No smell\n・Wounds heal faster.\n・Taking physical damage reduced by 60%.\n・10% chance of recovering 1 HP/second when wet.\n・Slow effect when hit by melee attacks\nCONS\n・Taking cold damage increased by 200%.\n・Melee damage dealt reduced by 50%.\n・Thirst doubled\n・Weak at cooler temperatures.",
          "Shapeshift the your body into a Fire Element.\nWhile this form,\nPROS\n・Charge electric power 0.1KJ/1m\n・Infrared visibility available\n・fireproof(No resistance to smoke)\n・Body is glowing\n・Flame effect on melee attack.\n・Taking physical damage reduced by 30%.\n・High temperature resistant.\nCONS\n・2x fatigue.\n・50% chance of 1 damage/second when wet.",
          "Shapeshift the your body into an Air Element.\nWhile this form,\nPROS\n・Speed up by 20%\n・Falling Damage Immune\n・able to climb walls\n・Can glide through the air.\n・Taking Electronical damage reduced by 90%.\n・Taking physical damage reduced by 80%.\n・No footstep noise.\n・Evasion rate up\n・push effect when hit by melee attacks\nCONS\n・melee and ranged attacks deal no damage(spells can be used).\n・Additional pain when damaged.",
          "Shapeshift the your body into an Earth Element.\nWhile this form,\nPROS\n・Stamina recovery up by 50%\n・No feel pains\n・Bonus to bare hand damage\n・3x melee damage\n・Taking bullet damage reduced by 50%.\n・Taking physical damage reduced by 50%.\n・AoE downed effect & remove grabbed effect when hit by melee attacks\nCONS\n・2x move costs.\n・3x footstep noise.\n・Stamina consumption for melee attacks x2."
        ]
      }
    ]
  },
  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_CHANGE_TO_WATER_ELEMENT",
    "effect": [ { "u_cast_spell": { "id": "PSY_magi_shapeshift_water_element_spell" } } ]
  },
  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_CHANGE_TO_FIRE_ELEMENT",
    "effect": [ { "u_cast_spell": { "id": "PSY_magi_shapeshift_fire_element_spell" } } ]
  },
  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_CHANGE_TO_AIR_ELEMENT",
    "effect": [ { "u_cast_spell": { "id": "PSY_magi_shapeshift_air_element_spell" } } ]
  },
  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_CHANGE_TO_EARTH_ELEMENT",
    "effect": [ { "u_cast_spell": { "id": "PSY_magi_shapeshift_earth_element_spell" } } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_WATER_ELEMENT",
    "condition": { "not":  { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" } },
    "effect": [ 
      { "u_lose_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
      { "u_add_trait": "PSY_SHAPESHIFTER_WATER_FORM" } 
    ],
    "false_effect": [ { "u_message": "The shapeshifting has already been applied." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_FIRE_ELEMENT",
    "condition": { "not":  { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" } },
    "effect": [ 
      { "u_lose_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
      { "u_add_trait": "PSY_SHAPESHIFTER_FIRE_FORM" } 
    ],
    "false_effect": [ { "u_message": "The shapeshifting has already been applied." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_AIR_ELEMENT",
    "condition": { "not":  { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" } },
    "effect": [ 
      { "u_lose_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
      { "u_add_trait": "PSY_SHAPESHIFTER_AIR_FORM" } 
    ],
    "false_effect": [ { "u_message": "The shapeshifting has already been applied." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_EARTH_ELEMENT",
    "condition": { "not":  { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" } },
    "effect": [ 
      { "u_lose_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
      { "u_add_trait": "PSY_SHAPESHIFTER_EARTH_FORM" } 
    ],
    "false_effect": [ { "u_message": "The shapeshifting has already been applied." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_SHAPESHIFT_HUMAN_FORM",
    "condition": {  
        "or":
            [
              { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
              { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
              { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
              { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" }
            ] 
    },
    "effect": [ 
      { "u_lose_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
      { "u_lose_trait": "PSY_SHAPESHIFTER_WATER_FORM" } 
    ],
    "false_effect": [ { "u_message": "You are already human form." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_fire_element_melee_Flameburst",
    "effect": [
      { "npc_location_variable": { "context_val": "loc" } },
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_spell_fire_element_melee_heat_damage", "min_level": 0, "max_level": 0 },
          "loc": { "context_val": "loc" }
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_air_element_melee_Airburst",
    "effect": [
      { "npc_location_variable": { "context_val": "loc" } },
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_air_elemental_air_blast_push", "min_level": 9, "max_level": 9 },
          "loc": { "context_val": "loc" }
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_air_element_melee_Stomp",
    "effect": [
      { "npc_location_variable": { "context_val": "loc" } },
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_earth_elemental_seismic_stomp_melee", "min_level": 9, "max_level": 9 },
          "loc": { "context_val": "loc" }
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_water_element_melee_waterslow",
    "effect": [
      { "npc_location_variable": { "context_val": "loc" } },
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_spell_water_element_melee_slow_damage", "min_level": 0, "max_level": 0 },
          "loc": { "context_val": "loc" }
        }
      }
    ]
  },


  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_element_spell_cast",
    "condition": {
      "or":[
      { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" }
      ]  
    },
    "effect": {
      "run_eocs": [
        "PSY_EOC_fire_element_spell_damage",
        "PSY_EOC_water_element_spell_damage",
        "PSY_EOC_air_element_spell_damage",
        "PSY_EOC_earth_element_spell_damage"
      ]
    },
    "false_effect": [ { "u_message": "Cannot cast this spell while human form." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_fire_element_spell_damage",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_roulette_fireball" }, 
          "targeted": true 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_water_element_spell_damage",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_roulette_cone_mist" },
          "targeted": true 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_air_element_spell_damage",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_roulette_vacuum_decompression" },
          "targeted": true 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_earth_element_spell_damage",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_roulette_seismic_stomp"  },
          "targeted": true 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_element_summon_spell_cast",
    "condition": {
      "or":[
      { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" }
      ]  
    },
    "effect": {
      "run_eocs": [
        "PSY_EOC_fire_element_spell_summon",
        "PSY_EOC_water_element_spell_summon",
        "PSY_EOC_air_element_spell_summon",
        "PSY_EOC_earth_element_spell_summon"
      ]
    },
    "false_effect": [ { "u_message": "Cannot cast this spell while human form." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_fire_element_spell_summon",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_summon_fire" }, 
          "targeted": false 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_water_element_spell_summon",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_summon_water" }, 
          "targeted": false 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_air_element_spell_summon",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_summon_air" }, 
          "targeted": false
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_earth_element_spell_summon",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_summon_earth" }, 
          "targeted": false
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_element_support_spell_cast",
    "condition": {
      "or":[
      { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
      { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" }
      ]  
    },
    "effect": {
      "run_eocs": [
        "PSY_EOC_fire_element_spell_support",
        "PSY_EOC_water_element_spell_support",
        "PSY_EOC_air_element_spell_support",
        "PSY_EOC_earth_element_spell_support"
      ]
    },
    "false_effect": [ { "u_message": "Cannot cast this spell while human form." } ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_fire_element_spell_support",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_FIRE_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_spell_create_fire_shield" }, 
          "targeted": false 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_water_element_spell_support",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_WATER_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_spell_create_med" }, 
          "targeted": false 
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_air_element_spell_support",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_AIR_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_spell_rocket_jump" }, 
          "targeted": true
        }
      }
    ]
  },

  {
    "type": "effect_on_condition",
    "id": "PSY_EOC_earth_element_spell_support",
    "effect": [
      {
        "if": { "u_has_trait": "PSY_SHAPESHIFTER_EARTH_FORM" },
        "then": { 
          "u_cast_spell": { "id": "PSY_magi_shapeshift_element_overload" }, 
          "targeted": false
        }
      }
    ]
  }
]
